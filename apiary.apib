FORMAT: 1A
HOST: http://mqa.cz/api/v1/

# Sudop - MQA

MQA API is the REST API project for managing trains.

# Data Structures

## Error (object)
+ errorCode: 1004 (number, required)
+ httpStatusCode: 404 (number, required)
+ errorTitle: `(1004) InvalidUser` (string, required)
+ errorMessage: `User not found` (string, required)
+ errorDetail: `detail of errors` (string)



## Auth (object)
+ username: "hrabalo" (string, required)
+ password: "123456" (string, required)

## Credential (object)
+ token: "fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a" (string, required)
+ expiry: "2015-09-09T21:58:31+02:00" (string, required)
+ user (User, required)



## User (object)
+ id: "d93f61c2-42c5-11e6-beb8-9e71128cae77" (string, required)
+ username "sanak" (string, required)
+ name: "Saňák" (string, required)
+ role: 1 (number, required)

## UpdateUser (object)
+ name: "Saňák" (string, required)
+ role: 1  (number, required)

## UserRole (object)
+ id: 1 (number, required)
+ name: "USER" (string, required)



## DatabaseType (object)
+ id: 1 (number, required)
+ name: "oficiální" (string, required)

## DatabaseExportLog (object)
+ date: "2015-09-09T21:58:31+02:00" (string, required)
+ message: "Export {dumpFileName} byl úspěšně vytvořen." (string, optional)
+ user (User, required)

## DatabaseImportLog (object)
+ date: "2015-09-09T21:58:31+02:00" (string, required)
+ message: "{fileName} byl úspěšně importován." (string, optional)
+ user (User, required)

## DatabaseCatalogue (object)
+ id: 1 (number, required)
+ name: "ČSN1230" (string, required)



## VehicleType (object)
+ id: 1 (number, required)
+ group: 2 (number, required)
+ name: "Současné hnací vozidlo ČD" (string, required)

## VehicleGroupType (object)
+ id: 1 (number, required)
+ name: "Současné hnací vozidlo ČD" (string, required)

## VehicleChassis (object)
+ id: 1 (number, required)
+ name: "A1" (string, required)
+ totalAxles: 5 (number, required)

## VehicleListItem (object)
+ id: "d93f61c2-42c5-11e6-beb8-9e71128cae77" (string, required)
+ edited: "2015-09-09T21:58:31+02:00" (string, required)
+ editor (User, required)
+ name: "Mašina1" (string, required)
+ vehicleType: 3 (number, required)
+ databaseType: 1 (number, required)
+ totalAxles: 5 (number, required)

## Vehicle (object)
+ id: "7d4846be-42c4-11e6-beb8-9e71128cae77" (string, required)
+ edited: "2015-09-09T21:58:31+02:00" (string, required)
+ editor (User, required)
+ name: "Mašina1" (string, required)
+ partName: "Nazev casti zatez. schematu" (string, optional)
+ vehicleType: 2 (number, required)
+ databaseType: 1 (number, required)
+ chassisType: 12 (number, required)
+ normativeType: 3 (number, required)
+ series: "705" (string, required)
+ oldSeries: "T239.1" (string, optional)
+ note: "Prvni masina" (string, optional)
+ photo: "BASE64 ilustrarion photo data" (string, optional)
+ forwardSpeed: 150 (number, required)
+ backwardSpeed: 15 (number, required)
+ gravityCenterHeight: 110 (number, required)
+ bumperHeight: 10 (number, required)
+ pivotDistance: 12 (number, required)
+ pivotHeight: 7 (number, required)
+ dynamicForceFactor: 1.98 (number, required)
+ basicLoadFactor: 1.7 (number, required)
+ basicPassiveLoadFactor: 1.0 (number, required)
+ totalWorkingVehicles: 8 (number, required)
+ maxVelocity: 160 (number, required)
+ totalAxles: 5 (number, required)
+ axleForces (array[VehicleAxleForce], required)
+ tractiveForces (array[VehicleForce], required)
+ breakingForces (array[VehicleForce], required)

## VehicleAxleForce (object)
+ axlePoint: 0 (number, required)
+ axleDistance: 2.375 (number, required)
+ force: 220.0 (number, required)
+ passiveForce: 0 (number, required)

## VehicleForce (object)
+ velocity: 10 (number, required)
+ force: 220.0 (number, required)

## VehicleNote (object)
+ id: "7d4846be-42c4-11e6-beb8-9e71128cae77" (string, required)
+ created: "2015-09-09T21:58:31+02:00" (string, required)
+ creator (User, required)
+ edited: "2015-09-09T21:58:31+02:00" (string, required)
+ editor (User, required)
+ content: "A hlavne jezdi pomalu" (string, required)

## VehicleNoteCreate (object)
+ content: "A hlavne jezdi pomalu" (string, required)

## VehicleAttachment (object)
+ id: "7d4846be-42c4-11e6-beb8-9e71128cae77" (string, required)
+ created: "2015-09-09T21:58:31+02:00" (string, required)
+ creator (User, required)
+ edited: "2015-09-09T21:58:31+02:00" (string, required)
+ editor (User, required)d)
+ fileName: "pekny_obrazek.png" (string, required)
+ fileType: "image/png" (string, required)
+ note: "moc pekny obrazek" (string, optional)
          


## TrainsetListItem (object)
+ id: "d93f61c2-42c5-11e6-beb8-9e71128cae77" (string, required)
+ edited: "2015-09-09T21:58:31+02:00" (string, required)
+ editor (User, required)
+ name: "Shimns" (string, required)
+ note: "Strojirna Brno" (string, required)
+ trainsetType: 5 (number, required)
+ databaseType: 1 (number, required)

## Trainset (object)
+ id: "d93f61c2-42c5-11e6-beb8-9e71128cae77" (string, required)
+ name: "Shimns" (string, required)
+ databaseType: 1 (number, required)
+ editor (User, required)

## TrainsetType (object)
+ id: 1 (number, required)
+ group: 2 (number, required)
+ name: "Schema tratovych trid" (string, required)

## TrainsetGroupType (object)
+ id: 1 (number, required)
+ name: "Uzivatelske soupravy" (string, required)



## Crossbeams (array)
+ id: "d93f61c2-42c5-11e6-beb8-9e71128cae77" (string, required)



# Group Authentication
The authentication resources can be used for **log in** and **log out** the user to the Tubis application.

## /authentication

### POST
Returns the private API token key for the user with its validity.


+ Request (application/json)

    + Attributes (Auth)

    + Body
    
            {
                "username" : "username",
                "password" : "123456"
            }

+ Response 200 (application/json)

    + Attributes (object)

        + credential (Credential)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "credential": {
                    "token": "fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a",
                    "expiry": "2015-09-09T21:58:31+02:00",
                    "user": {
                        "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                        "name": "Jan Novák",
                        "role": 1
                    }
                }
            }

+ Response 400
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Logs out the user by the Api-Key, if the response is successful.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 204

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group User
The User administration API


## /users{?offset}{?limit}

### GET
List users

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + users (array[User])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "users": [
                    {
                        "id": "d93f61c2-42c5-11e6-beb8-9e71128cae77",
                        "name": "Admin",
                        "role": 1
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "name": "Pepik",
                        "role": 2
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /users/{id}

### GET
Get current user

+ Paramters:
    + id - `id of user`

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes(User)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "id": "d93f61c2-42c5-11e6-beb8-9e71128cae77",
                "name": "Admin",
                "role": 1
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Update user (include change password too)

+ Paramters:
    + id - `id of user`

+ Request (application/json)

    + Attributes (object)

        + user (UpdateUser)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "user": {
                    "name": "Admin",
                    "role": 1
                }
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /users/sync

### POST
Force sync user from Active Directory

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

## /users/roles

The role resources can be used for managing roles.

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + roles (array[UserRole])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "roles": [
                    {
                        "id": 0,
                        "name": "USER"
                    },
                    {
                        "id": 1,
                        "name": "ADMIN"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group Database
The database types resources can be used for managing database types and catalogues.

## /database/types

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[DatabaseType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "oficiální"
                    },
                    {
                        "id": 2,
                        "name": "uživatelská"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/normatives

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + normatives (array[DatabaseCatalogue])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "normatives": [
                    {
                        "id": 1,
                        "name": "ČSN1230"
                    },
                    {
                        "id": 2,
                        "name": "NP1250"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /database/export
The export resources can be used for full database exports.


### POST
Request to create database dump file

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/sql)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Content-Disposition: "attachment; filename=\"ppt_database_export-2015-09-09T21:58:31+02:00.sql>\""

    + Body

            `database dump file stream`

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/export/logs

### GET
Get database exports logs

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + logs (array[DatabaseExportLog])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "logs": [
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "Export {dumpFileName} byl úspěšně vytvořen.",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    },
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "Chyba při vytváření exportu: {e.Message}",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Pepik",
                            "role": 2
                        }
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/import
The import resources can be used for database CSV imports.

### POST
Import database catlogs from CSV file

+ Request (multipart/form-data)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            `CSV file stream`

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/import/logs
Get database imports logs

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + logs (array[DatabaseImportLog])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "logs": [
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "{fileName} byl úspěšně importován.",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    },
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        Chyba importu: {e.Message}
                        "message": "Chyba importu: {e.Message}",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Pepik",
                            "role": 2
                        }
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


# Group Vehicle
The vehicle resources can be used for managing vehicles.

## /vehicles

### GET
Gets the collection of vehicles.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + vehicles (array[VehicleListItem])

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "vehicles": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Mašina1",
                        "vehicleType": 1,
                        "databaseType": 1,
                        "totalAxles": 2,
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Mašina2",
                        "vehicleType": 2,
                        "databaseType": 0,
                        "totalAxles": 5,
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 2
                        }
                }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a vehicle.
<!--TODO: Samostatny endpoint na Duplikaci - nebo se bude datove dit na strane FrontEndu -->

+ Request (application/json)

    + Attributes(Vehicle)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body
    
            {
                "name": "Mašina1",
                "partName": "Nazev casti schematu",
                "vehicleType": 2,
                "databaseType": 1,
                "normativeType": 12,
                "note": "Prvni masina",
                "photo": "base64 vehicle photo",
                "series": "705",
                "oldSeries": "T239.1",
                "chassisType": 2,
                "forwardSpeed": 150,
                "backwardSpeed": 15,
                "gravityCenterHeight": 110,
                "bumperHeight": 10,
                "pivotDistance": 1,
                "pivotHeight": 12.5
                "dynamicForceFactor": 1.90,
                "basicLoadFactor": 1.84,
                "basicPassiveLoadFactor": 1.12,
                "totalWorkingVehicles": 12,
                "maxVelocity": 160,
                "totalAxles": 2,
                "axleForces": [
                    {
                        "axlePoint": 0,
                        "axleDistance": 2.375,
                        "force": 220.0,
                        "passiveForce": 0
                    },
                    {
                        "axlePoint": 2.375,
                        "axleDistance": 4.700,
                        "force": 220.0,
                        "passiveForce": 0
                    }
                ],
                "brakingForces": [
                    {
                        "velocity": 0,
                        "force": 10.2
                    },
                    {
                        "velocity": 10,
                        "force": 20.0
                    }
                ],
                "tractiveForces": [
                    {
                        "velocity": 0,
                        "force": 20.2
                    },
                    {
                        "velocity": 10,
                        "force": 40.0
                    }
                ]
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /vehicles/{id}

+ Parameters:

    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification vehicle.

### GET
Gets the vehicle attributes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + vehicle (Vehicle)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "vehicle": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "edited": "2015-09-09T21:58:31+02:00",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                    },
                    "name": "Mašina1",
                    "partName": "Nazev casti schematu",
                    "vehicleType": 2,
                    "databaseType": 1,
                    "normativeType": 3,
                    "note": "Prvni masina",
                    "photo": "base64 vehicle photo",
                    "series": "705",
                    "oldSeries": "T239.1",
                    "chassisType": 2,
                    "forwardSpeed": 150,
                    "backwardSpeed": 15,
                    "gravityCenterHeight": 110,
                    "bumperHeight": 10,
                    "pivotDistance": 1,
                    "pivotHeight": 12.5
                    "dynamicForceFactor": 1.90,
                    "basicLoadFactor": 1.84,
                    "basicPassiveLoadFactor": 1.12,
                    "totalWorkingVehicles": 12,
                    "maxVelocity": 160,
                    "totalAxles": 2,
                    "axleForces": [
                        {
                            "axlePoint": 0,
                            "axleDistance": 2.375,
                            "force": 220.0,
                            "passiveForce": 0
                        },
                        {
                            "axlePoint": 2.375,
                            "axleDistance": 4.700,
                            "force": 220.0,
                            "passiveForce": 0
                        }
                    ],
                    "brakingForces": [
                        {
                            "velocity": 0,
                            "force": 10.2
                        },
                        {
                            "velocity": 10,
                            "force": 20.0
                        }
                    ],
                    "tractiveForces": [
                        {
                            "velocity": 0,
                            "force": 20.2
                        },
                        {
                            "velocity": 10,
                            "force": 40.0
                        }
                    ]
                }
            }
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### PUT
Updates the vehicle attributes.

+ Request (application/json)

    + Attributes (object)

        + vehicle (Vehicle)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
               "vehicle": {
                    "name": "Mašina1",
                    "vehicleType": 2,
                    "databaseType": 1,
                    "note": "Prvni masina",
                    "photo": "base64 vehicle photo",
                    "series": "705",
                    "oldSeries": "T239.1",
                    "chassisType": 2,
                    "forwardSpeed": 150,
                    "backwardSpeed": 15,
                    "gravityCenterHeight": 110,
                    "bumperHeight": 10,
                    "pivotDistance": 1,
                    "pivotHeight": 12.5
                    "dynamicForceFactor": 1.90,
                    "basicLoadFactor": 1.84,
                    "basicPassiveLoadFactor": 1.12,
                    "totalWorkingVehicles": 12,
                    "totalAxles": 2,
                    "axleForces": [
                        {
                            "axlePoint": 0,
                            "axleDistance": 2.375,
                            "force": 220.0,
                            "passiveForce": 0
                        },
                        {
                            "axlePoint": 2.375,
                            "axleDistance": 4.700,
                            "force": 220.0,
                            "passiveForce": 0
                        }
                    ],
                    "brakingForces": [
                        {
                            "velocity": 0,
                            "force": 10.2
                        },
                        {
                            "velocity": 10,
                            "force": 20.0
                        }
                    ],
                    "tractiveForces": [
                        {
                            "velocity": 0,
                            "force": 20.2
                        },
                        {
                            "velocity": 10,
                            "force": 40.0
                        }
                    ]
                }
            }
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### DELETE
Deletes the vehicle completely.

+ Request (application/json)
    + Header
    
            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/notes

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes`) ... Number `vehicleId`  unique identification vehicle.

### GET
Gets the collection of vehicles notes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + notes (array[VehicleNote])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "notes": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "content": "Toto masina jezdi na naftu",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role": 2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "content": "A hlavne jezdi pomalu",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a vehicle Note.

+ Request (application/json)

    + Attributes(VehicleNoteCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "content": "A hlavne jezdi pomalu"
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/notes/{id}

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification note of vehicle.


### GET
Gets the vehicle note.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + note (VehicleNote)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "note": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role": 2
                        },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "content": "A hlavne jezdi pomalu",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Updates the vehicle note.

+ Request (application/json)

    + Attributes (object)

        + note (VehicleNoteCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "note": {
                    "content": "A hlavne jezdi pomalu"
                }
            }

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Delete the vehicle note.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /vehicles/{vehicleId}/attachments

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments`) ... Number `vehicleId`  unique identification vehicle.


### GET
Gets the collection of vehicles attachments.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachments (array[VehicleAttachment])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    
            {
                "attachments": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role": 1
                        },
                        "edited": null,
                        "editor": null,
                        "fileName": "pekny_obrazek.png"
                        "fileType": "image/png",
                        "note": "moc pekny obrazek"
                    },
                    {
                        "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role": 2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "fileName": "specifikace.pdf"
                        "fileType": "document/pdf",
                        "note": "Specifikace lokomotivy",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a vehicle attachment.

+ Request (multipart/form-data)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
                "note": "moc pekny obrazek"
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/attachments/{id}

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of vehicle.


### GET
Gets the vehicle attachment info.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachment (VehicleAttachment)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "attachment": {
                     "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                     "created": "2015-09-09T21:58:31+02:00",                     
                     "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "role": 2
                        },
                     "edited": "2015-09-09T21:58:31+02:00",
                     "fileName": "specifikace.pdf"
                     "fileType": "document/pdf",
                     "note": "Specifikace lokomotivy",
                     "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Updates the vehicle attachment.

+ Request (multipart/form-data)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "note": "moc pekny obrazek"
            }

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Delete the vehicle attachment.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/attachments/{id}/file

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of vehicle.

### GET
Gets the vehicle attchment file stream.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (content-type of file)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Content-Disposition: "attachment; filename=\"<jemno prilohy>\""

    + Body

            `File content as stream`

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types

### GET
Gets the vehicle types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[VehicleType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "group": 2,
                        "name": "Současné hnací vozidlo ČD"
                    },
                    {
                        "id": 2,
                        "group": 2,
                        "name": "Kolejový jeřáb"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types/{id}/chassis

### GET
Gets the vehicle groups chassis collection.

+ Parameters:

    + id (required, number, `/vehicles/types/10/chassis`) ... Number `id` identification vehicle type for its chassis collection.
 

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + chassis (array[VehicleChassis])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "chassis": [
                    {
                        "id": 1,
                        "name": "A1",
                        "totalAxles": 5
                    },
                    {
                        "id": 2,
                        "name": "A2",
                        "totalAxles": 5
                    },
                    {
                        "id": 3,
                        "name": "A3",
                        "totalAxles": 7
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types/groups

### GET
Gets the vehicle type groups collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + groups (array[VehicleGroupType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "groups": [
                    {
                        "id": 1,
                        "name": "Hnací vozidla"
                    },
                    {
                        "id": 2,
                        "name": "Tažená vozidla"
                    },
                    {
                        "id": 3,
                        "name": "Části zatěžovacích schémat"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


# Group Trainset
The trainset resources can be used for managing trainsets.


## /trainsets

### GET
Gets the collection of trainsets.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + trainsets (array[TrainsetListItem])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "trainsets": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Shimns",
                        "note": "Strojirna Brno",
                        "trainsetType": 5,
                        "databaseType": 1,
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Shimns",
                        "note": "Skoda",
                        "trainsetType": 7,
                        "databaseType": 0,
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "role": 1
                        }
                }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Create a Trainset
<!-- TODO: andpoint na pop-up s vozidly? -->

+ Request (application/json)

    + Attributes(Trainset)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {

            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /trainsets/{id}
<!-- Seznam dostupnych vozidel = seznam vsech vozidel nebo zvlast funkce? -->
<!-- PUT, GET konkretniho - pozor poradi hraje roli!, DELETE -->

+ Paramters:

    + id - `id of user`



## /trainsets/types

### GET
Gets the trainsets types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrainsetType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "group": 1,
                        "name": "Vicenasobne jodnotky (MU)"
                    },
                    {
                        "id": 2,
                        "group": 1,
                        "name": "Navrhova zatezovaci schemata"
                    },
                    {
                        "id": 1,
                        "group": 2,
                        "name": "Uzivatelska souprava"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /trainsets/types/groups

### GET
Gets the trainsets type groups collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + groups (array[TrainsetGroupType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "groups": [
                    {
                        "id": 1,
                        "name": "Zatezovaci schemata"
                    },
                    {
                        "id": 2,
                        "name": "Uzivatelske soupravy"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group Crossbeam
The crossbeam resources can be used for managing crossbeams.


## /crossbeams
<!-- POST s duplikaci, GET vsech -->


## /crossbeams/{id}
<!-- PUT, GET, DELETE -->



# Group Errors

## /{error}

### GET
Global error response structure

+ Response 404 (application/json)

    + Attributes (object)

        + error (Error)