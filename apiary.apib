FORMAT: 1A
HOST: http://mqa.cz/api/v1/

# Sudop - MQA

MQA API is the REST API project for managing trains.

# Data Structures

## Error (object)
+ errorCode: 1004 (number, required)
+ httpStatusCode: 404 (number, required)
+ errorTitle: `(1004) InvalidUser` (string, required)
+ errorMessage: `User not found` (string, required)
+ errorDetail: `detail of errors` (string)



## Auth (object)
+ username: `hrabalo` (string, required)
+ password: `123456` (string, required)

## Credential (object)
+ token: `fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a` (string, required)
+ expiry: `2015-09-09T21:58:31+02:00` (string, required)
+ user (User, required)



## User (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ username: `sanak` (string, required)
+ name: `Saňák` (string, required)
+ role: 1 (number, required)

## UpdateUser (object)
+ name: `Saňák` (string, required)
+ role: 1  (number, required)

## UserRole (object)
+ id: 1 (number, required)
+ name: `USER` (string, required)



## DatabaseType (object)
+ id: 1 (number, required)
+ name: `oficiální` (string, required)

## DatabaseExportLog (object)
+ date: `2015-09-09T21:58:31+02:00` (string, required)
+ message: `Export {dumpFileName} byl úspěšně vytvořen.` (string, optional)
+ user (User, required)

## DatabaseImportLog (object)
+ date: `2015-09-09T21:58:31+02:00` (string, required)
+ message: `{fileName} byl úspěšně importován.` (string, optional)
+ user (User, required)

## DatabaseCatalogue (object)
+ id: 1 (number, required)
+ name: `ČSN1230` (string, required)



## Vehicle (object)
+ id: `7d4846be-42c4-11e6-beb8-9e71128cae77` (string, required)
+ systemic: `false` (boolean, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, optional)
+ editor (User, optional)
+ name: `Mašina1` (string, required)
+ partName: `Nazev casti zatez. schematu` (string, optional)
+ vehicleType: 2 (number, required)
+ databaseType: 1 (number, required)
+ chassisType: 12 (number, required)
+ normativeType: 3 (number, required)
+ series: `705` (string, required)
+ oldSeries: `T239.1` (string, optional)
+ note: `Prvni masina` (string, optional)
+ photo: `<BASE64 ilustrarion photo data>` (string, optional)
+ forwardSpeed: 150 (number, required)
+ backwardSpeed: 15 (number, required)
+ gravityCenterHeight: 110 (number, required)
+ bumperHeight: 10 (number, required)
+ pivotDistance: 12 (number, required)
+ pivotHeight: 7 (number, required)
+ dynamicForceFactor: 1.98 (number, required)
+ basicLoadFactor: 1.7 (number, required)
+ basicPassiveLoadFactor: 1.0 (number, required)
+ totalWorkingVehicles: 8 (number, required)
+ maxVelocity: 160 (number, required)
+ totalAxles: 5 (number, required)
+ axleForces (array[VehicleAxleForce], required)
+ tractiveForces (array[VehicleForce], required)
+ breakingForces (array[VehicleForce], required)

## VehicleCreate (object)
+ name: `Mašina1` (string, required)
+ partName: `Nazev casti zatez. schematu` (string, optional)
+ vehicleType: 2 (number, required)
+ databaseType: 1 (number, required)
+ chassisType: 12 (number, required)
+ normativeType: 3 (number, required)
+ series: `705` (string, required)
+ oldSeries: `T239.1` (string, optional)
+ note: `Prvni masina` (string, optional)
+ photo: `<BASE64 ilustrarion photo data>` (string, optional)
+ forwardSpeed: 150 (number, required)
+ backwardSpeed: 15 (number, required)
+ gravityCenterHeight: 110 (number, required)
+ bumperHeight: 10 (number, required)
+ pivotDistance: 12 (number, required)
+ pivotHeight: 7 (number, required)
+ dynamicForceFactor: 1.98 (number, required)
+ basicLoadFactor: 1.7 (number, required)
+ basicPassiveLoadFactor: 1.0 (number, required)
+ totalWorkingVehicles: 8 (number, required)
+ maxVelocity: 160 (number, required)
+ totalAxles: 5 (number, required)
+ axleForces (array[VehicleAxleForce], required)
+ tractiveForces (array[VehicleForce], required)
+ breakingForces (array[VehicleForce], required)

## VehicleType (object)
+ id: 1 (number, required)
+ group: 2 (number, required)
+ name: `Současné hnací vozidlo ČD` (string, required)

## VehicleGroupType (object)
+ id: 1 (number, required)
+ name: `Současné hnací vozidlo ČD` (string, required)

## VehicleChassis (object)
+ id: 1 (number, required)
+ name: `A1` (string, required)
+ type: `SPECIAL` (string, required)
+ totalAxles: 5 (number, required)

## VehicleListItem (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ systemic: `false` (boolean, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor: `karel` (string, required)
+ name: `Mašina1` (string, required)
+ note: `Rychla kola` (string, optional)
+ vehicleType: 3 (number, required)
+ databaseType: 1 (number, required)
+ totalAxles: 5 (number, required)

## VehicleAxleForce (object)
+ axlePoint: 0 (number, required)
+ axleDistance: 2.375 (number, required)
+ force: 220.0 (number, required)
+ passiveForce: 0 (number, required)

## VehicleForce (object)
+ velocity: 10 (number, required)
+ force: 220.0 (number, required)

## VehicleNote (object)
+ id: `7d4846be-42c4-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor (User, required)
+ content: `A hlavne jezdi pomalu` (string, required)

## VehicleNoteCreate (object)
+ content: `A hlavne nejezdi rychle` (string, required)

## VehicleAttachment (object)
+ id: `7d4846be-42c4-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor (User, required)
+ fileName: `pekny_obrazek.png` (string, required)
+ fileType: `image/png` (string, required)
+ note: `moc pekny obrazek` (string, optional)



## Trainset (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, optional)
+ editor (User, optional)
+ name: `Shimns` (string, required)
+ note: `Extra kratky vlak` (string, optional)
+ databaseType: 1 (number, required)
+ trainsetType: 3 (number, required)
+ vehicles (array[TrainsetVehicleItem], required)

## TrainsetCreate (object)
+ name: `Shimns` (string, required)
+ note: `Extra kratky vlak` (string, optional)
+ databaseType: 1 (number, required)
+ trainsetType: 3 (number, required)
+ vehicles (array[TrainsetVehicleItem], required)

## TrainsetListItem (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor: `Karel Maly` (string, required)
+ name: `Shimns` (string, required)
+ note: `Strojirna Brno` (string, optional)
+ trainsetType: 5 (number, required)
+ databaseType: 1 (number, required)

## TrainsetVehicleItem (object)
+ vehicleId: `9a871e1e-11f0-4960-add6-e2f9eaa4c03d` (string, required)
+ count: 3 (number, required)
+ order: 2 (number, optional)
+ backward: false (boolean, required)
+ isOperational: true (boolean, required)

## TrainsetType (object)
+ id: 1 (number, required)
+ group: 2 (number, required)
+ name: `Schema tratovych trid` (string, required)

## TrainsetGroupType (object)
+ id: 1 (number, required)
+ name: `Uzivatelske soupravy` (string, required)



## TrainsetClasificationCreate (object)
+ normativeType: `10` (number, required)
+ fixed: `false` (boolean, required)
+ trainsetId:  `9a871e1e-11f0-4960-add6-e2f9eaa4c03d` (string, required)

## TrainsetClasification (object)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ normativeType: `10` (number, required)
+ trainset (TrainsetListItem, required)
+ trackLoadClassType: `9` (number, optional)
+ maxLoadQuota: `124` (number, optional)
+ fixed: `false` (boolean, required)
+ symmetric: `true` (boolean, required)
+ results (array[TrainsetClasificationResultItem], required)

## TrainsetClasificationResultItem (object)
+ crossbeamSpan: `10` (number, required)
+ loadClassMomentum: `5.6` (number, required)
+ trainsetMomentum: `4.6` (number, required)
+ momentumEfficiency: `0.79` (number, required)
+ loadClassForce: `22.6` (number, required)
+ trainsetForce: `21.38` (number, required)
+ forceEfficiency: `0.79` (number, required)



## TrainsetPassabilityCreate (object)
+ reliabilityByCSN: `false` (boolean, required)
+ useLoadLimit: `true` (boolean, required)
+ useUsabilityLimit: `false` (boolean, required)
+ maxVelocity: `160.0` (number, required)
+ trainsetId:  `9a871e1e-11f0-4960-add6-e2f9eaa4c03d` (string, required)
+ routeId:  `d08c3852-c87f-43b3-ad30-814efcee255a` (string, required)

## TrainsetPassability (object)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ reliabilityByCSN: `false` (boolean, required)
+ useLoadLimit: `true` (boolean, required)
+ useUsabilityLimit: `false` (boolean, required)
+ maxVelocity: `160.0` (number, required)
+ trainset (TrainsetListItem, required)
+ route (RouteListItem, required)
+ result (TrainsetPassabilityResult, required)
+ reportData (array[TrainsetPassabilityReport], required)
+ restrictions (array[TrainsetPassabilityRestriction], required)

## TrainsetPassabilityResult (object)
+ routePassable: `true` (boolean, required)
+ maxRouteLoadEfficiency: `0.92` (number, required)
+ maxLoadEfficiencyTrackNo: `3` (number, required)
+ maxVehicleSpeed: `160.0` (number, required)

## TrainsetPassabilityRestriction (object)
+ trackNo: `2` (number, required)
+ restriction: `rychlost` (string, required)

## TrainsetPassabilityReport (object)
+ trackNo: `1` (number, required)
+ trackType: `1` (number, required)
+ trackSectionCode: `12` (number, required)
+ trackSectionPlacement: `5747.0` (number, required)
+ name: `Usek 1` (string, required)
+ trackLoadClassType: `41` (number, required)
+ trackLoadClassVelocity: `80.0` (number, required)
+ loadCapacity: `1.0` (number, optional)
+ maxLoadEfficiency: `0.98` (number, required)
+ passVelocityLimit: `60` (number, optional)
+ passNote: `!omezení rychlosti` (string, optional)
+ details (array[TrainsetPassabilityReportDetail], required)

## TrainsetPassabilityReportDetail (object)
+ crossbeamType: `2` (number, required)
+ maxLoadLimitEfficiency: `0.98` (number, required)
+ maxLoadLimitRecordNo: `2` (number, required)
+ maxUsabilityLimitEfficiency: `1.22` (number, required)
+ maxUsabilityLimitRecordNo: `3` (number, required)
+ specialCrossbeamName: `Speciální příčníková čára 2` (string, optional)
+ specialCrossbeamDescription: `Pro testovaci ucely` (string, optional)
+ extremeFromPositive: `true` (boolean, optional)
+ useLighteningEffect: `false` (boolean, optional)
+ useZLM71: `false` (boolean, optional)
+ records (array[TrainsetPassabilityReportDetailRecord], required)

## TrainsetPassabilityReportDetailRecord (object)
+ recordNo: `2` (number, required)
+ crossmemberSpan: `5.0` (number, required)
+ loadClassUsabilityLimitEffect: `22.5` (number, required)
+ trainsetUsabilityLimitEffect: `27.6` (number, optional)
+ loadClassLoadLimitEffect: `57.5` (number, required)
+ trainsetLoadLimitEffect: `88.6` (number, optional)
+ loadClassDynamicFactor: `1.67` (number, required)
+ trainsetDynamicFactor: `1.58` (number, required)
+ trainsetVelocityLimit: `100.0` (number, required)
+ usabilityLimitEfficiency: `0.95` (number, required)
+ loadLimitEfficiency: `0.99` (number, required)


## Track (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, optional)
+ editor (User, optional)
+ tabelized: `false` (boolean, required)
+ name: `Ocelový most` (string, required)
+ note: `Jiz notne stary` (string, optional)
+ databaseType: 1 (number, required)
+ trackType: 2 (number, required)
+ trackSectionCode: 12 (number, required)
+ trackSectionPlacementCode: 5 (number, required)
+ trackSectionPlacement: 12.11 (number, required)
+ trackLoadClassType: 3 (number, required)
+ trackLoadClassVelocity: 160 (number, required)
+ loadCapacity: 1.80 (number, required)
+ older30years: true (boolean, required)
+ nkElement (TrackNKElement, required)
+ plainFieldGroup (PlainFieldGroup, required)

## TrackCreate (object)
+ name: `Ocelový most` (string, required)
+ note: `Jiz notne stary` (string, optional)
+ databaseType: 1 (number, required)
+ trackType: 2 (number, required)
+ trackSectionCode: 12 (number, required)
+ trackSectionPlacementCode: 5 (number, required)
+ trackLoadClassType: 3 (number, required)
+ trackLoadClassVelocity: 160 (number, required)
+ loadCapacity: 1.80 (number, required)
+ older30years: true (boolean, required)
+ nkElement (TrackNKElement, required)
+ plainFieldGroup (PlainFieldGroup, required)

## TrackAttachment (object)
+ id: `7d4846be-42c4-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor (User, required)
+ fileName: `pekny_obrazek.png` (string, required)
+ fileType: `image/png` (string, required)
+ note: `moc pekny obrazek` (string, optional)

## TrackTabelizedListItem (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ creator (User, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ name: `Zatřídění soupravy` (string, required)
+ note: `Automatická tabelizace` (string, optional)

## TrackListItem (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor: `karel` (string, required)
+ name: `Výtoň` (string, required)
+ note: `mostovka` (string, optional)
+ trackType: 1 (number, required)
+ trackSectionCode: 12 (number, required)
+ trackSectionPlacement: 2.75 (number, required)
+ trackLoadClassType: 9 (number, required)
+ loadCapacity: 0.75 (number, required)
+ databaseType: 1 (number, required)

## NormativeNKElement (object)
+ normativeType: 1 (number, required)
+ calculated: false (boolean, required)
+ loadClassDynamicFactor: `1.2` (number, required)
+ trainsetDynamicFactor: `1.2` (number, required)
+ effectiveBridgeLength: `88` (number, required)
+ info: `Pro určení náhradní delka je potřeba vyplnit ...` (string, required)

## NormativeDataForm (object)
+ mainBeamType: 4 (number, required)
+ bridgeboardType: 2 (number, required)
+ bridgeboardStructureType: 7 (number, required)
+ parameterApr: `1.0` (number, optional)
+ parameterAz: `1.0` (number, optional)
+ parameterBdk: `1.0` (number, optional)
+ parameterBpo: `1.0` (number, optional)
+ parameterBpr: `1.0` (number, optional)
+ parameterG: `1.0` (number, optional)
+ parameterH: `1.0` (number, optional)
+ parameterH1: `1.0` (number, optional)
+ parameterH2: `1.0` (number, optional)
+ parameterL: `1.0` (number, optional)
+ parameterLmin: `1.0` (number, optional)
+ parameterLmax: `1.0` (number, optional)
+ parameterLpart: `1.0` (number, optional)
+ parameterLp: `1.0` (number, optional)
+ parameterLpr: `1.0` (number, optional)
+ parameterLpo: `1.0` (number, optional)
+ parameterLpo: `1.0` (number, optional)
+ parameterLdk: `1.0` (number, optional)
+ parameterN0: `1.0` (number, optional)
+ parameterN: 3 (number, optional)
+ parameterLx: 3 (array[number], optional)
+ trackQuality: 3 (number, optional)
+ trackPlacing: 3 (number, optional)
+ tracksOnBridge: 3 (number, optional)
+ bridgeMaterial: 3 (number, optional)
+ trackConnection: `true` (boolean, optional)

## TrackNKElement (object)
+ crossbeamType: 2 (number, required)
+ crossbeamLength: 10.8 (number, optional)
+ specialCrossbeam (SpecialCrossbeamNKElement, required)
+ normatives (array[NormativeNKElement], required)
+ normativeForm (NormativeDataForm, required)

## SpecialCrossbeamNKElement (object)
+ name: `Maly most` (string, required)
+ descriptionNote: `null` (string, optional)
+ extremeFromPositive: `true` (boolean, required)
+ useLighteningEffect: `false` (boolean, required)
+ sourceNote: `Modernizace Čáslav - Chrudim, SO 28-30-16, Příloha 11, Statický  výpočet, SUDOP PRAHA 2004, str. 498)` (string, optional)
+ beamForces (array[BeamForceNKElement], required)

## BeamForceNKElement (object)
+ point: 10 (number, required)
+ leftForce: 40 (number, required)
+ rightForce: 40 (number, required)
+ note: `Bod zlomu` (string, optional)

## PlainFieldGroup (object)
+ trackQuality: 2 (number, required)
+ trackPlacing: 1 (number, required)
+ tracksOnBridge: 1 (number, required)
+ trackConnection: false (boolean, required)
+ mainCrossbeamDistance: 10.2 (number, required)
+ plainFields (array[PlainFiledElement], required)
+ beamFields (array[PlainFiledElement], required)

## PlainFiledElement (object)
+ initialSpread: 1.0 (number, required)
+ terminalSpread: 10.0 (number, required)
+ increase: 0.2 (number, required)

## TrackType (object)
+ id: 1 (number, required)
+ name: `Prvek NK` (string, required)

## TrackLoadClassType (object)
+ id: 1 (number, required)
+ name: `E5` (string, required)

## TrackCrossbeamType (object)
+ id: 1 (number, required)
+ name: `S - Speciální příčníková čára` (string, required)

## TrackQualityType (object)
+ id: 1 (number, required)
+ name: `Standardní kvalita jízdní dráhy` (string, required)

## TrackPlacingType (object)
+ id: 1 (number, required)
+ name: `Průběžné kolejové lože` (string, required)

## TracksOnBridgeType (object)
+ id: 1 (number, required)
+ name: `Jednokolejný most` (string, required)

## BridgeStructureType (object)
+ id: 1 (number, required)
+ name: `Betonový nebo masivní` (string, required)

## MainBeamType (object)
+ id: 1 (number, required)
+ name: `Prostý nosník / deska` (string, required)

## BridgeboardStructureSubType (object)
+ id: 1 (number, required)
+ name: `Ocelová ortotropní mostovka` (string, required)

## BridgeboardType (object)
+ id: 1 (number, required)
+ name: `Ocelová ortotropní mostovka` (string, required)
+ subtype (array[BridgeboardStructureSubType], optional)

## TrackSectionType (object)
+ id: 1 (number, required)
+ name: `0100` (string, required)

## TrackSectionBridge (object)
+ id: 1 (number, required)
+ section: `0100` (string, required)
+ name: `Zelný most` (string, required)
+ placement: 10.6 (number, required)
+ historical: false (boolean, required)
+ id: 1 (number, required)



## Route (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ created: `2015-09-09T21:58:31+02:00` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, optional)
+ editor (User, optional)
+ name: `Transformátor` (string, required)
+ note: `Strojírna Brno` (string, optional)
+ databaseType: 1 (number, required)
+ startStation: `Brno` (string, required)
+ endStation: `Kolín` (string, required)
+ throughStation: `Kutna Hora` (string, optional)
+ tracks (array[RouteTrackItem], required)

## RouteCreate (object)
+ name: `Transformátor` (string, required)
+ note: `Strojírna Brno` (string, optional)
+ databaseType: 1 (number, required)
+ startStation: `Brno` (string, required)
+ endStation: `Kolín` (string, required)
+ throughStation: `Kutna Hora` (string, optional)
+ tracks (array[RouteCreateTrackItem], required)

## RouteListItem (object)
+ id: `d93f61c2-42c5-11e6-beb8-9e71128cae77` (string, required)
+ creator (User, required)
+ edited: `2015-09-09T21:58:31+02:00` (string, required)
+ editor: `Karel Maly` (string, required)
+ databaseType: 1 (number, required)
+ name: `Cargo` (string, required)
+ startStation: `Pardubice` (string, required)
+ endStation: `Ústí n. Labem` (string, required)
+ note: `Transformator` (string, optional)

## RouteTrackItem (object)
+ trackId: `9a871e1e-11f0-4960-add6-e2f9eaa4c03d` (string, required)
+ backward: false (boolean, required)
+ track (TrackListItem, required)

## RouteCreateTrackItem (object)
+ trackId: `9a871e1e-11f0-4960-add6-e2f9eaa4c03d` (string, required)
+ backward: false (boolean, optional)



## IdmAuth (object)
+ username: `idm` (string, required)
+ password: `123456` (string, required)

## IdmSession (object)
+ token: `fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a` (string, required)
+ timeout: `PT300S` (string, optional)

## IdmUser (object)
+ idmuid: `10000-00000000-00000000000000000000000000000001` (string, required)
+ sid: `S-1-5-21-3405594985-2614012127-2140697856-5776i` (string, required)
+ roles (array[IdmUserRole], required)
+ username: `tomas123` (string, required)
+ password: `Xasd321465D` (string, optional)
+ email: `tomas@szdc.cz` (string, required)
+ name: `Tomáš` (string, required)
+ surname: `Hanák` (string, required)
+ status: `true` (boolean, required)

## IdmCreateUser (object)
+ idmuid: `10000-00000000-00000000000000000000000000000001` (string, required)
+ sid: `S-1-5-21-3405594985-2614012127-2140697856-5776i` (string, required)
+ username: `tomas123` (string, optional)
+ password: `Xasd321465D` (string, optional)
+ email: `tomas@szdc.cz` (string, optional)
+ name: `Tomáš` (string, optional)
+ surname: `Hanák` (string, optional)
+ status: `true` (boolean, optional)

## IdmUpdateUser (object)
+ sid: `S-1-5-21-3405594985-2614012127-2140697856-5776i` (string, required)
+ username: `tomas123` (string, optional)
+ password: `Xasd321465D` (string, optional)
+ email: `tomas@szdc.cz` (string, optional)
+ name: `Tomáš` (string, optional)
+ surname: `Hanák` (string, optional)
+ status: `true` (boolean, optional)

## IdmUserRole (object)
+ id: `1` (number, required)
+ name: `Uživatel` (string, required)



# Group IDM 
The IDM resources can be used for **log in**, **log out** user create and editing users

## /idm/authentication

### POST
Get user token for IDM managment.

+ Request (application/json)

    + Attributes (IdmAuth)

    + Body
    
            {
                "username" : "idm",
                "password" : "123456"
            }

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes

        + session (IdmSession)

    + Body

            {
                "session": {
                    "token": "fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a",
                    "timeout": "PT300S"
                }
            }


+ Response 404
+ Response 400
+ Response 401
+ Response 500


### DELETE
Logs IDM manager

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 204

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 400
+ Response 403
+ Response 404
+ Response 500




## /idm/users

### GET
Get all IDM users

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes 

        + users (array[IdmUser])

    + Body

            {
                "users": [
                    {
                        "idmuid": "10000-00000000-00000000000000000000000000000001",
                        "sid": "S-1-5-21-3405594985-2614012127-2140697856-5776i",
                        "username": "tomas123",
                        "password": "Xasd321465D",
                        "email": "tomas@szdc.cz",
                        "name": "Tomáš",
                        "surname": "Hanák",
                        "status": true
                    },
                    {
                        "idmuid": "10000-00000000-00000000000000000000000000000002",
                        "sid": "S-1-5-21-3405594985-2614012127-99999999-8888i",
                        "username": "michal999",
                        "password": "heslo",
                        "email": "michal@szdc.cz",
                        "name": "Michal",
                        "surname": "Kaše",
                        "status": false
                    }
                ]
            }


+ Response 403
+ Response 404
+ Response 500


### POST
Create IDM user by AD data

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

    + Attributes (IdmCreateUser)

    + Body

            {
                "idmuid": "10000-00000000-00000000000000000000000000000001",
                "sid": "S-1-5-21-3405594985-2614012127-2140697856-5776i",
                "username": "tomas123",
                "password": "Xasd321465D",
                "email": "tomas@szdc.cz",
                "name": "Tomáš",
                "surname": "Hanák",
                "status": true
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: {host}/idm/users/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 403
+ Response 400
+ Response 404
+ Response 409
+ Response 500



## /idm/users/{idmuid}

+ Parameters

    + idmuid (required, string, `10000-00000000-00000000000000000000000000000001`) ... `idmuid` identify current user on system

### GET
Get user data

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes (IdmUser)

    + Body

            {
                "idmuid": "10000-00000000-00000000000000000000000000000001",
                "sid": "S-1-5-21-3405594985-2614012127-2140697856-5776i",
                "username": "tomas123",
                "password": "Xasd321465D",
                "email": "tomas@szdc.cz",
                "name": "Tomáš",
                "surname": "Hanák",
                "status": true
            }

+ Response 403
+ Response 404
+ Response 500


### PUT
Update user data

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes (IdmUpdateUser)

    + Body

            {
                "sid": "S-1-5-21-3405594985-2614012127-2140697856-5776i",
                "username": "tomas123",
                "password": "Xasd321465D",
                "email": "tomas@szdc.cz",
                "name": "Tomáš",
                "surname": "Hanák",
                "status": true
            }

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 404
+ Response 400
+ Response 403
+ Response 500



## /idm/users/{idmuid}/active

+ Parameters

    + idmuid (required, string, `10000-00000000-00000000000000000000000000000001`) ... `idmuid` identify current user on system

### PUT
Active IDM user

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 404
+ Response 403
+ Response 400
+ Response 500


### DELETE
Deactive IDM user

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

+ Response 204 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 404
+ Response 403
+ Response 400
+ Response 500


## /idm/users/roles

### GET
Get users roles

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes

        + roles (array[IdmUserRole])

    + Body

            {
                "roles": [
                    {
                        "id": 1,
                        "name": "Administrátor"
                    },
                    {
                        "id": 2,
                        "name": "Uživatel"
                    },
                    {
                        "id": 3,
                        "name": "Čtenář"
                    }
                ]
            }

+ Response 404
+ Response 400
+ Response 403
+ Response 500


## /idm/users/{idmuid}/roles

+ Parameters

    + idmuid (required, string, `10000-00000000-00000000000000000000000000000001`) ... `idmuid` identify current user on system

### GET
Get IDM user roles

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Attributes

            + roles (array[IdmUserRole])

    + Body

            {
                "roles": [
                    {
                        "id": 1,
                        "name": "Administrátor"
                    },
                    {
                        "id": 2,
                        "name": "Uživatel"
                    }
                ]
            }

+ Response 404
+ Response 400
+ Response 403
+ Response 500

### PUT
Set IDM user roles

+ Request (application/json)

    + Header

            X-Idm-Token: <idm-session-token-token>

    + Attributes

        + roles (array[number])

    + Body

            {
                "roles": [1, 3]
            }


+ Response 200 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 404
+ Response 400
+ Response 403
+ Response 500


# Group Authentication
The authentication resources can be used for **log in** and **log out** the user to the MQA application.

## /authentication

### POST
Returns the private API token key for the user with its validity.


+ Request (application/json)

    + Attributes (Auth)

    + Body
    
            {
                "username" : "username",
                "password" : "123456"
            }

+ Response 200 (application/json)

    + Attributes (object)

        + credential (Credential)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "credential": {
                    "token": "fc7ef14ba27e29c89ec640cec3b91fb374db9b5abaa5e4699680c8c561bd9f5a",
                    "expiry": "2015-09-09T21:58:31+02:00",
                    "user": {
                        "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                        "username": "stanek",
                        "name": "Jan Novák",
                        "role": 1
                    }
                }
            }

+ Response 400
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Logs out the user by the Api-Key, if the response is successful.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 204

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group User
The User administration API


## /users{?offset}{?limit}

### GET
List users

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + users (array[User])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "users": [
                    {
                        "id": "d93f61c2-42c5-11e6-beb8-9e71128cae77",
                        "name": "Admin",
                        "username": "stanek",
                        "role": 1
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "name": "Pepik",
                        "username": "karel",
                        "role": 2
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /users/{id}

### GET
Get current user

+ Paramters:
    + id - `id of user`

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes(User)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "id": "d93f61c2-42c5-11e6-beb8-9e71128cae77",
                "name": "Admin",
                "username": "stanek",
                "role": 1
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Update user (include change password too)

+ Paramters:
    + id - `id of user`

+ Request (application/json)

    + Attributes (object)

        + user (UpdateUser)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "user": {
                    "name": "Admin",
                    "role": 1
                }
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /users/sync

### POST
Force sync user from Active Directory

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

## /users/roles

The role resources can be used for managing roles.

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + roles (array[UserRole])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "roles": [
                    {
                        "id": 0,
                        "name": "USER"
                    },
                    {
                        "id": 1,
                        "name": "ADMIN"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group Database
The database types resources can be used for managing database types and catalogues.

## /database/types

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[DatabaseType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "oficiální"
                    },
                    {
                        "id": 2,
                        "name": "uživatelská"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/normatives

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + normatives (array[DatabaseCatalogue])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "normatives": [
                    {
                        "id": 1,
                        "name": "ČSN1230"
                    },
                    {
                        "id": 2,
                        "name": "NP1250"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /database/export
The export resources can be used for full database exports.


### POST
Request to create database dump file

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/sql)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Content-Disposition: "attachment; filename=\"ppt_database_export-2015-09-09T21:58:31+02:00.sql>\""

    + Body

            `database dump file stream`

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/export/logs

### GET
Get database exports logs

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + logs (array[DatabaseExportLog])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "logs": [
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "Export {dumpFileName} byl úspěšně vytvořen.",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    },
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "Chyba při vytváření exportu: {e.Message}",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Pepik",
                            "username": "karel",
                            "role": 2
                        }
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/import
The import resources can be used for database CSV imports.

### POST
Import database catlogs from CSV file

+ Request (multipart/form-data)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            `CSV file stream`

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /database/import/logs
Get database imports logs

### GET

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + logs (array[DatabaseImportLog])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "logs": [
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "{fileName} byl úspěšně importován.",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    },
                    {
                        "date": "2015-09-09T21:58:31+02:00",
                        "message": "Chyba importu: {e.Message}",
                        "user": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Pepik",
                            "username": "karel",
                            "role": 2
                        }
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


# Group Vehicle
The vehicle resources can be used for managing vehicles.

## /vehicles{?forTrainset}

+ Parameters

    + forTrainset (optional, boolean, `true`) ... for `true` value return only vehicles not load schemas if user is not `admin`.


### GET
Gets the collection of vehicles.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + vehicles (array[VehicleListItem])

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "vehicles": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "systemic": false,
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Mašina1",
                        "note": "Rychla kola",
                        "vehicleType": 1,
                        "databaseType": 1,
                        "totalAxles": 2,
                        "editor": "pepa"
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "systemic": false,
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "name": "Mašina2",
                        "note": null,
                        "vehicleType": 2,
                        "databaseType": 0,
                        "totalAxles": 5,
                        "editor": "Karel"
                }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles

### POST
Creates a vehicle.
<!--TODO: Samostatny endpoint na Duplikaci - nebo se bude datove dit na strane FrontEndu -->

+ Request (application/json)

    + Attributes(VehicleCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body
    
            {
                "name": "Mašina1",
                "partName": "Nazev casti schematu",
                "vehicleType": 2,
                "databaseType": 1,
                "normativeType": 12,
                "note": "Prvni masina",
                "photo": "base64 vehicle photo",
                "series": "705",
                "oldSeries": "T239.1",
                "chassisType": 2,
                "forwardSpeed": 150,
                "backwardSpeed": 15,
                "gravityCenterHeight": 110,
                "bumperHeight": 10,
                "pivotDistance": 1,
                "pivotHeight": 12.5
                "dynamicForceFactor": 1.90,
                "basicLoadFactor": 1.84,
                "basicPassiveLoadFactor": 1.12,
                "totalWorkingVehicles": 12,
                "maxVelocity": 160,
                "totalAxles": 2,
                "axleForces": [
                    {
                        "axlePoint": 0,
                        "axleDistance": 2.375,
                        "force": 220.0,
                        "passiveForce": 0
                    },
                    {
                        "axlePoint": 2.375,
                        "axleDistance": 4.700,
                        "force": 220.0,
                        "passiveForce": 0
                    }
                ],
                "brakingForces": [
                    {
                        "velocity": 0,
                        "force": 10.2
                    },
                    {
                        "velocity": 10,
                        "force": 20.0
                    }
                ],
                "tractiveForces": [
                    {
                        "velocity": 0,
                        "force": 20.2
                    },
                    {
                        "velocity": 10,
                        "force": 40.0
                    }
                ]
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /vehicles/{id}

+ Parameters:

    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification vehicle.

### GET
Gets the vehicle attributes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + vehicle (Vehicle)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "vehicle": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "systemic": false,
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "name": "Mašina1",
                    "partName": "Nazev casti schematu",
                    "vehicleType": 2,
                    "databaseType": 1,
                    "normativeType": 3,
                    "note": "Prvni masina",
                    "photo": "base64 vehicle photo",
                    "series": "705",
                    "oldSeries": "T239.1",
                    "chassisType": 2,
                    "forwardSpeed": 150,
                    "backwardSpeed": 15,
                    "gravityCenterHeight": 110,
                    "bumperHeight": 10,
                    "pivotDistance": 1,
                    "pivotHeight": 12.5
                    "dynamicForceFactor": 1.90,
                    "basicLoadFactor": 1.84,
                    "basicPassiveLoadFactor": 1.12,
                    "totalWorkingVehicles": 12,
                    "maxVelocity": 160,
                    "totalAxles": 2,
                    "axleForces": [
                        {
                            "axlePoint": 0,
                            "axleDistance": 2.375,
                            "force": 220.0,
                            "passiveForce": 0
                        },
                        {
                            "axlePoint": 2.375,
                            "axleDistance": 4.700,
                            "force": 220.0,
                            "passiveForce": 0
                        }
                    ],
                    "brakingForces": [
                        {
                            "velocity": 0,
                            "force": 10.2
                        },
                        {
                            "velocity": 10,
                            "force": 20.0
                        }
                    ],
                    "tractiveForces": [
                        {
                            "velocity": 0,
                            "force": 20.2
                        },
                        {
                            "velocity": 10,
                            "force": 40.0
                        }
                    ]
                }
            }
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### PUT
Updates the vehicle attributes.

+ Request (application/json)

    + Attributes (object)

        + vehicle (VehicleCreate)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
               "vehicle": {
                    "name": "Mašina1",
                    "vehicleType": 2,
                    "databaseType": 1,
                    "note": "Prvni masina",
                    "photo": "base64 vehicle photo",
                    "series": "705",
                    "oldSeries": "T239.1",
                    "chassisType": 2,
                    "forwardSpeed": 150,
                    "backwardSpeed": 15,
                    "gravityCenterHeight": 110,
                    "bumperHeight": 10,
                    "pivotDistance": 1,
                    "pivotHeight": 12.5
                    "dynamicForceFactor": 1.90,
                    "basicLoadFactor": 1.84,
                    "basicPassiveLoadFactor": 1.12,
                    "totalWorkingVehicles": 12,
                    "totalAxles": 2,
                    "axleForces": [
                        {
                            "axlePoint": 0,
                            "axleDistance": 2.375,
                            "force": 220.0,
                            "passiveForce": 0
                        },
                        {
                            "axlePoint": 2.375,
                            "axleDistance": 4.700,
                            "force": 220.0,
                            "passiveForce": 0
                        }
                    ],
                    "brakingForces": [
                        {
                            "velocity": 0,
                            "force": 10.2
                        },
                        {
                            "velocity": 10,
                            "force": 20.0
                        }
                    ],
                    "tractiveForces": [
                        {
                            "velocity": 0,
                            "force": 20.2
                        },
                        {
                            "velocity": 10,
                            "force": 40.0
                        }
                    ]
                }
            }
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### DELETE
Deletes the vehicle completely.

+ Request (application/json)
    + Header
    
            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/notes

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes`) ... Number `vehicleId`  unique identification vehicle.

### GET
Gets the collection of vehicles notes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + notes (array[VehicleNote])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "notes": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "content": "Toto masina jezdi na naftu",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "content": "A hlavne jezdi pomalu",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a vehicle Note.

+ Request (application/json)

    + Attributes(VehicleNoteCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "content": "A hlavne jezdi pomalu"
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/notes/{id}

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/notes/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification note of vehicle.


### GET
Gets the vehicle note.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + note (VehicleNote)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "note": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 2
                    },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "content": "A hlavne jezdi pomalu",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    }
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Updates the vehicle note.

+ Request (application/json)

    + Attributes (object)

        + note (VehicleNoteCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "note": {
                    "content": "A hlavne jezdi pomalu"
                }
            }

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Delete the vehicle note.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /vehicles/{vehicleId}/attachments

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments`) ... Number `vehicleId`  unique identification vehicle.


### GET
Gets the collection of vehicles attachments.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachments (array[VehicleAttachment])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    
            {
                "attachments": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 1
                        },
                        "edited": null,
                        "editor": null,
                        "fileName": "pekny_obrazek.png"
                        "fileType": "image/png",
                        "note": "moc pekny obrazek"
                    },
                    {
                        "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "fileName": "specifikace.pdf"
                        "fileType": "document/pdf",
                        "note": "Specifikace lokomotivy",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a vehicle attachment.

+ Request (multipart/form-data)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
                "note": "moc pekny obrazek"
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/attachments/{id}

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of vehicle.


### GET
Gets the vehicle attachment info.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachment (VehicleAttachment)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "attachment": {
                     "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                     "created": "2015-09-09T21:58:31+02:00",                     
                     "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "username": "lala",
                            "name": "Jana Mala",
                            "role": 2
                        },
                     "edited": "2015-09-09T21:58:31+02:00",
                     "fileName": "specifikace.pdf"
                     "fileType": "document/pdf",
                     "note": "Specifikace lokomotivy",
                     "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "username": "stanek",
                            "name": "Jan Novák",
                            "role": 1
                        }
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Updates the vehicle attachment.

+ Request (multipart/form-data)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "note": "moc pekny obrazek"
            }

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Delete the vehicle attachment.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/{vehicleId}/attachments/{id}/file

+ Parameters:

    + vehicleId (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `vehicleId`  unique identification vehicle.
    + id (required, number, `/vehicles/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of vehicle.

### GET
Gets the vehicle attchment file stream.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (content-type of file)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Content-Disposition: "attachment; filename=\"<jemno prilohy>\""

    + Body

            `File content as stream`

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types

### GET
Gets the vehicle types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[VehicleType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "group": 2,
                        "name": "Současné hnací vozidlo ČD"
                    },
                    {
                        "id": 2,
                        "group": 2,
                        "name": "Kolejový jeřáb"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types/{id}/chassis

### GET
Gets the vehicle groups chassis collection.

+ Parameters:

    + id (required, number, `/vehicles/types/10/chassis`) ... Number `id` identification vehicle type for its chassis collection.
 

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + chassis (array[VehicleChassis])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "chassis": [
                    {
                        "id": 1,
                        "name": "0 - Obecné vozidlo",
                        "type": "GENERAL",
                        "totalAxles": 0
                    },
                    {
                        "id": 2,
                        "name": "1 - Dvounápravové hnací vozidlo",
                        "type": "STANDARD",
                        "totalAxles": 5
                    },
                    {
                        "id": 3,
                        "name": "A1",
                        "type": "SPECIAL",
                        "totalAxles": 7
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /vehicles/types/groups

### GET
Gets the vehicle type groups collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + groups (array[VehicleGroupType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "groups": [
                    {
                        "id": 1,
                        "name": "Hnací vozidla"
                    },
                    {
                        "id": 2,
                        "name": "Tažená vozidla"
                    },
                    {
                        "id": 3,
                        "name": "Části zatěžovacích schémat"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


# Group Trainset
The trainset resources can be used for managing trainsets.


## /trainsets

### GET
Gets the collection of trainsets.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + trainsets (array[TrainsetListItem])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "trainsets": [
                    {
                        "id": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2017-04-26T07:58:46.008033+02:00",
                        "name": "Souprava 2",
                        "note": "Extra kratky vlak",
                        "editor": "Test User",
                        "trainsetType": 3,
                        "databaseType": 2
                    },
                    {
                        "id": "1e5178ee-0982-490c-9273-f1cdbaf98273",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2017-04-25T13:19:39.299362+02:00",
                        "name": "Souprava 1",
                        "note": "Extra dlouhy vlak",
                        "editor": "Test User",
                        "trainsetType": 2,
                        "databaseType": 1
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Create a Trainset
<!-- TODO: separatni endpoint na pop-up s vozidly? -->

+ Request (application/json)

    + Attributes(TrainsetCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "name": "Souprava 2",
                "note": "Extra kratky vlak",
                "databaseType": 2,
                "trainsetType": 3,
                "vehicles": [
                    {
                        "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                        "count": 2,
                        "isOperational": true,
                        "backward": true
                    },
                    {
                        "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                        "count": 1,
                        "isOperational": true,
                        "backward": false
                    },
                    {
                        "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                        "count": 1,
                        "isOperational": false,
                        "backward": false
                    },
                    {
                        "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                        "count": 5,
                        "isOperational": false,
                        "backward": true
                    }
                ]
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /trainsets/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /trainsets/{id}

+ Parameters:

    + id (required, number, `/trainsets/12834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification of trainset.

### GET
Gets the trainset attributes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + trainset (Trainset)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "trainset": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "name": "Souprava 2",
                    "note": "Extra kratky vlak",
                    "databaseType": 2,
                    "trainsetType": 3,
                    "vehicles": [
                        {
                            "order": 1,
                            "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "count": 2,
                            "isOperational": true,
                            "backward": true
                        },
                        {
                            "order": 2,
                            "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "count": 1,
                            "isOperational": true,
                            "backward": false
                        },
                        {
                            "order": 3,
                            "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "count": 1,
                            "isOperational": false,
                            "backward": false
                        },
                        {
                            "order": 4,
                            "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "count": 5,
                            "isOperational": false,
                            "backward": true
                        }
                    ]
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### PUT
Updates the trainset attributes.

+ Request (application/json)

    + Attributes (object)

        + trainset (TrainsetCreate)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body

            {
                'trainset": {
                    "name": "Souprava 2",
                    "note": "Extra kratky vlak",
                    "databaseType": 2,
                    "trainsetType": 3,
                    "vehicles": [
                        {
                            "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "count": 2,
                            "isOperational": true,
                            "backward": true
                        },
                        {
                            "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "count": 1,
                            "isOperational": true,
                            "backward": false
                        },
                        {
                            "vehicleId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "count": 1,
                            "isOperational": false,
                            "backward": false
                        },
                        {
                            "vehicleId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "count": 5,
                            "isOperational": false,
                            "backward": true
                        }
                    ]
                }
            }

+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Deletes the trainset completely.

+ Request (application/json)
    + Header
    
            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /trainsets/classify

### POST
Classify a trainset to track load class.

+ Request (application/json)

    + Attributes(TrainsetClasificationCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "normativeType": 10,
                "fixed": false,
                "trainsetId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be"
            }

+ Response 200 (application/json)

    + Attributes(TrainsetClasification)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    
            {
                "created": "2015-09-09T21:58:31+02:00",
                "creator": {
                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                    "name": "Jan Novák",
                    "username": "stanek",
                    "role": 1
                },
                "normativeType": 1,
                "trackLoadClassType": 9,
                "maxLoadQuota": 124,
                "fixed": false,
                "symmetric": true,
                "trainset": {
                    "id": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                    "edited": "2017-04-26T07:58:46.008033+02:00",
                    "name": "Souprava 2",
                    "note": "Extra kratky vlak",
                    "editor": "Test User",
                    "trainsetType": 3,
                    "databaseType": 2
                },
                "results": [
                    {
                        "crossbeamSpan": 1,
                        "loadClassMomentum": 5.6,
                        "trainsetMomentum": 4.5,
                        "momentumEfficiency": 0.80,
                        "loadClassForce": 22.50,
                        "trainsetForce": 21.38,
                        "forceEfficiency": 0.95
                    },
                    {
                        "crossbeamSpan": 10,
                        "loadClassMomentum": 56.3,
                        "trainsetMomentum": 28.1,
                        "momentumEfficiency": 0.50,
                        "loadClassForce": 225.0,
                        "trainsetForce": 123.75,
                        "forceEfficiency": 0.55
                    },
                    {
                        "crossbeamSpan": 100,
                        "loadClassMomentum": 562.5,
                        "trainsetMomentum": 337.5,
                        "momentumEfficiency": 0.60,
                        "loadClassForce": 2250,
                        "trainsetForce": 450,
                        "forceEfficiency": 0.20
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /trainsets/passability

### POST
Trainset passability check on specific route.

+ Request (application/json)

    + Attributes(TrainsetPassabilityCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "reliabilityByCSN": false,
                "useLoadLimit": true,
                "useUsabilityLimit": false,
                "maxVelocity": 160,
                "trainsetId": "d08c3852-c87f-43b3-ad30-814efcee255a",
                "routeId": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef"
            }

+ Response 200 (application/json)

    + Attributes(TrainsetPassability)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    
            {
                "created": "2015-09-09T21:58:31+02:00",
                "creator": {
                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                    "name": "Jan Novák",
                    "username": "stanek",
                    "role": 1
                },
                "reliabilityByCSN": false,
                "useLoadLimit": true,
                "useUsabilityLimit": false,
                "maxVelocity": 160,
                "trainset": {
                    "id": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                    "edited": "2017-04-26T07:58:46.008033+02:00",
                    "name": "Souprava 2",
                    "note": "Extra kratky vlak",
                    "editor": "Test User",
                    "trainsetType": 3,
                    "databaseType": 2
                },
                "route": {
                        "id": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2017-04-26T07:58:46.008033+02:00",
                        "editor": "Test User",
                        "databaseType": 2,
                        "name": "Cargo",
                        "startStation": "Pardubice",
                        "endStation": "Ústí n. Labem",
                        "note": null
                },
                "result": {
                    "routePassable": false,
                    "maxRouteLoadEfficiency": 1.15,
                    "maxLoadEfficiencyTrackNo": 2,
                    "maxVehicleSpeed": 0
                },
                "restrictions": [
                    {
                        "trackNo": 1,
                        "restriction": "rychlost"
                    },
                    {
                        "trackNo": 2,
                        "restriction": "přechodnost"
                    }
                ],
                "reportData": [
                    {
                        "trackNo": 1,
                        "trackType": 1,
                        "trackSectionCode": 1,
                        "trackSectionPlacement": 5747,
                        "name": "Test skupiny prostých polí",
                        "trackLoadClassType": 49,
                        "trackLoadClassVelocity": 60,
                        "loadCapacity": 1,
                        "maxLoadEfficiency": 0.99,
                        "passVelocityLimit": 60,
                        "passNote": "!omezení rychlosti"
                    },
                    {
                        "trackNo": 2,
                        "trackType": 1,
                        "trackSectionCode": 1,
                        "trackSectionPlacement": 5747,
                        "name": "Test skupiny prostých polí",
                        "trackLoadClassType": 44,
                        "trackLoadClassVelocity": 60,
                        "loadCapacity": 1,
                        "maxLoadEfficiency": 1.15,
                        "passVelocityLimit": null,
                        "passNote": "!není přechodná"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /trainsets/types

### GET
Gets the trainsets types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrainsetType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    

            {
                "types": [
                    {
                        "id": 1,
                        "group": 1,
                        "name": "Schémata traťových / lokomotivních tříd"
                    },
                    {
                        "id": 2,
                        "group": 1,
                        "name": "Vícenásobné jednotky (MU)"
                    },
                    {
                        "id": 3,
                        "group": 1,
                        "name": "Návrhová zatěžovací schémata"
                    },
                    {
                        "id": 4,
                        "group": 2,
                        "name": "Uživatelské soupravy"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



# Group Track
The tracks resources can be used for managing track section.


## /tracks/tabelized

### GET
Gets automatic tabelized collection of tracks.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + tracks (array[TrackTabelizedListItem])

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "tracks": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "created": "2015-09-09T21:58:31+02:00",
                        "name": "Zatřídění soupravy",
                        "note": "Automatická tabelizace s příčníky"
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "created": "2015-09-09T21:58:31+02:00",
                        "name": "Zatřídění soupravy",
                        "note": "Automatická tabelizace"
                    }
               ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks

### GET
Gets the users collection of tracks.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + tracks (array[TrackListItem])

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "tracks": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "editor": "pepa",
                        "trackType": 1,
                        "trackSectionCode": 12,
                        "trackSectionPlacement": 2.75,
                        "name": "Výtoň",
                        "note": "mostovka",
                        "trackLoadClass": 9,
                        "loadCapacity": 0.75,
                        "databaseType": 1
                    },
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "editor": "karel",
                        "trackType": 2,
                        "trackSectionCode": 11,
                        "trackSectionPlacement": 1.75,
                        "name": "Ocelový most",
                        "note": null,
                        "trackLoadClass": 7,
                        "loadCapacity": 1.80,
                        "databaseType": 2
                    }
               ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a track.
<!--TODO: Samostatny endpoint na Duplikaci - nebo se bude datove dit na strane FrontEndu -->

+ Request (application/json)

    + Attributes(TrackCreate)


    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "name": "Ocelový most",
                "note": null,
                "trackSectionCode": 12,
                "trackSectionPlacementCode": 5,
                "trackType": 2,
                "trackLoadClassType": 3,
                "trackLoadClassVelocity": 160.0,
                "loadCapacity": 1.80,
                "databaseType": 2,
                "older30years": true,
                "nkElement": {
                    "crossbeamType": 2,
                    "crossbeamLength": 20.1,
                    "specialCrossbeam": {
                        "name": "Maly most",
                        "descriptionNote": null,
                        "extremeFromPositive": true,
                        "useLighteningEffect": false,
                        "sourceNote": "Modernizace Čáslav - Chrudim, SO 28-30-16, Příloha 11, Statický  výpočet, SUDOP PRAHA 2004, str. 498)",
                        "beamForces": [
                            {
                                "point": 0,
                                "leftForce": 0,
                                "rightForce": 0,
                                "note": null
                            },
                            {
                                "point": 5,
                                "leftForce": 20,
                                "rightForce": 20,
                                "note": "Bod zlomu 2"
                            },
                            {
                                "point": 10,
                                "leftForce": -40,
                                "rightForce": -40,
                                "note": "Bod zlomu 3"
                            },
                            {
                                "point": 15,
                                "leftForce": 0,
                                "rightForce": 0,
                                "note": "Bod zlomu 4"
                            },
                        ]
                    },
                    "normatives": [
                        {
                            "normativeType": 1,
                            "loadClassDynamicFactor": 1.1,
                            "trainsetDynamicFactor": 1.2
                        },
                        {
                            "normativeType": 2,
                            "loadClassDynamicFactor": null,
                            "trainsetDynamicFactor": null
                        },
                        {
                            "normativeType": 3
                        }
                    ],
                    "normativeForm": {
                        "mainBeamType": 4,
                        "bridgeboardType": 2,
                        "bridgeboardStructureType": 7,
                        "parameterApr": 1.0,
                        "parameterAz": 1.0,
                        "parameterBdk": 1.0,
                        "parameterBpo": 1.0,
                        "parameterBpr": 1.0,
                        "parameterG": 1.0,
                        "parameterH": 1.0,
                        "parameterH1": 1.0,
                        "parameterH2": 1.0,
                        "parameterL": 1.0,
                        "parameterN": 3,
                        "parameterLx": [1.0, 2.0, 3.0],
                        "parameterLmin": 1.0,
                        "parameterLmax": 1.0,
                        "parameterLs": 1.0,
                        "parameterLpart": 1.0,
                        "parameterLpart": 1.0,
                        "parameterLp": 1.0,
                        "parameterLpr": 1.0,
                        "parameterLpo": 1.0,
                        "parameterLdk": 1.0,
                        "parameterN0": 1.0,
                        "trackQuality": 2,
                        "trackPlacing": 1,
                        "tracksOnBridge": 2,
                        "bridgeMaterial": 3,
                        "trackConnection": false
                    }
                },
                "plainFieldGroup": {
                    "trackQuality": 2,
                    "trackPlacing": 1,
                    "trackConnection": false,
                    "tracksOnBridge": 2,
                    "mainCrossbeamDistance": 10.2
                    "plainFields": [
                        {
                            "initialSpread": 1.0,
                            "terminalSpread": 10.0,
                            "increase": 0.2
                        },
                        {
                            "initialSpread": 10.0,
                            "terminalSpread": 20.0,
                            "increase": 0.5
                        }
                    ],
                    "beamFields": [
                        {
                            "initialSpread": 1.0,
                            "terminalSpread": 4.0,
                            "increase": 0.2
                        },
                        {
                            "initialSpread": 4.0,
                            "terminalSpread": 6.0,
                            "increase": 0.2
                        }
                    ],
                }
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /tracks/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/{id}

+ Parameters:

    + id (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification of track.

### GET
Gets the track attributes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + track (Track)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "track": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "tabelized": false,
                    "name": "Ocelový most",
                    "note": null,
                    "trackSectionCode": 12,
                    "trackSectionPlacementCode": 5,
                    "trackSectionPlacement": 11.87,
                    "trackType": 2,
                    "trackLoadClassType": 3,
                    "trackLoadClassVelocity": 7,
                    "loadCapacity": 1.80,
                    "databaseType": 2
                    "older30years": true,
                    "nkElement": {
                        "crossbeamType": 2,
                        "crossbeamLength": 20.1,
                        "specialCrossbeam": {
                            "name": "Maly most",
                            "descriptionNote": null,
                            "extremeFromPositive": true,
                            "useLighteningEffect": false,
                            "sourceNote": "Modernizace Čáslav - Chrudim, SO 28-30-16, Příloha 11, Statický  výpočet, SUDOP PRAHA 2004, str. 498)",
                            "beamForces": [
                                {
                                    "point": 0,
                                    "leftForce": 0,
                                    "rightForce": 0,
                                    "note": "Bod zlomu 2"
                                },
                                {
                                    "point": 5,
                                    "leftForce": 20,
                                    "rightForce": 20,
                                    "note": "Bod zlomu 3"
                                },
                                {
                                    "point": 10,
                                    "leftForce": -40,
                                    "rightForce": -40,
                                    "note": "Bod zlomu 4"
                                },
                                {
                                    "point": 15,
                                    "leftForce": 0,
                                    "rightForce": 0,
                                    "note": null
                                },
                            ]
                        },
                        "normatives": [
                            {
                                "normativeType": 1,
                                "calculated": true,
                                "info": "Pro určení náhradní delka je potřeba vyplnit ...",
                                "loadClassDynamicFactor": 1.1,
                                "trainsetDynamicFactor": 1.2,
                                "effectiveBridgeLength": 120.1
                            },
                            {
                                "normativeType": 2,
                                "calculated": false,
                                "info": null,
                                "loadClassDynamicFactor": 1.5,
                                "trainsetDynamicFactor": 1.7,
                                "effectiveBridgeLength": 88.0
                            },
                            {
                                "normativeType": 3,
                                "calculated": false,
                                "info": null,
                                "loadClassDynamicFactor": 1.2,
                                "trainsetDynamicFactor": 1.3,
                                "effectiveBridgeLength": 60.0
                            }
                        ],
                        "normativeForm": {
                            "mainBeamType": 4,
                            "bridgeboardType": 2,
                            "bridgeboardStructureType": 7,
                            "parameterApr": 1.0,
                            "parameterAz": 1.0,
                            "parameterBdk": 1.0,
                            "parameterBpo": 1.0,
                            "parameterBpr": 1.0,
                            "parameterG": 1.0,
                            "parameterH": 1.0,
                            "parameterH1": 1.0,
                            "parameterH2": 1.0,
                            "parameterL": 1.0,
                            "parameterN": 3,
                            "parameterLx": [1.0, 2.0, 3.0],
                            "parameterLmin": 1.0,
                            "parameterLmax": 1.0,
                            "parameterLs": 1.0,
                            "parameterLpart": 1.0,
                            "parameterLpart": 1.0,
                            "parameterLp": 1.0,
                            "parameterLpr": 1.0,
                            "parameterLpo": 1.0,
                            "parameterLdk": 1.0,
                            "parameterN0": 1.0,
                            "trackQuality": 2,
                            "trackPlacing": 1,
                            "tracksOnBridge": 2,
                            "bridgeMaterial": 3,
                            "trackConnection": false
                        }
                    },
                    "plainFieldGroup": {
                        "trackQuality": 2,
                        "trackPlacing": 1,
                        "trackConnection": false,
                        "tracksOnBridge": 2,
                        "mainCrossbeamDistance": 10.2
                        "plainFields": [
                            {
                                "initialSpread": 1.0,
                                "terminalSpread": 10.0,
                                "increase": 0.2
                            },
                            {
                                "initialSpread": 10.0,
                                "terminalSpread": 20.0,
                                "increase": 0.5
                            }
                        ],
                        "beamFields": [
                            {
                                "initialSpread": 1.0,
                                "terminalSpread": 4.0,
                                "increase": 0.2
                            },
                            {
                                "initialSpread": 4.0,
                                "terminalSpread": 6.0,
                                "increase": 0.2
                            }
                        ]
                    }
                }
            }
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### PUT
Updates the track attributes.

+ Request (application/json)

    + Attributes (object)

        + track (TrackCreate)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
               "track": {
                    "name": "Ocelový most",
                    "note": null,
                    "trackSectionCode": 12,
                    "trackSectionPlacementCode": 5,
                    "trackType": 2,
                    "trackLoadClassType": 3,
                    "trackLoadClassVelocity": 7,
                    "loadCapacity": 1.80,
                    "databaseType": 2
                    "older30years": true,
                    "nkElement": {
                        "crossbeamType": 2,
                        "crossbeamLength": 20.1,
                        "specialCrossbeam": {
                            "name": "Maly most",
                            "descriptionNote": null,
                            "extremeFromPositive": true,
                            "useLighteningEffect": false,
                            "sourceNote": "Modernizace Čáslav - Chrudim, SO 28-30-16, Příloha 11, Statický  výpočet, SUDOP PRAHA 2004, str. 498)",
                            "beamForces": [
                                {
                                    "point": 0,
                                    "leftForce": 0,
                                    "rightForce": 0,
                                    "note": "Bod zlomu 2"
                                },
                                {
                                    "point": 5,
                                    "leftForce": 20,
                                    "rightForce": 20,
                                    "note": "Bod zlomu 3"
                                },
                                {
                                    "point": 10,
                                    "leftForce": -40,
                                    "rightForce": -40,
                                    "note": "Bod zlomu 4"
                                },
                                {
                                    "point": 15,
                                    "leftForce": 0,
                                    "rightForce": 0,
                                    "note": null
                                },
                            ]
                        },
                        "normatives": [
                            {
                                    "normativeType": 1,
                                    "loadClassDynamicFactor": 1.1,
                                    "trainsetDynamicFactor": 1.2
                                },
                                {
                                    "normativeType": 2,
                                    "loadClassDynamicFactor": null,
                                    "trainsetDynamicFactor": null
                                },
                                {
                                    "normativeType": 3
                                }
                        ],
                        "normativeForm": {
                            "mainBeamType": 4,
                            "bridgeboardType": 2,
                            "bridgeboardStructureType": 7,
                            "parameterApr": 1.0,
                            "parameterAz": 1.0,
                            "parameterBdk": 1.0,
                            "parameterBpo": 1.0,
                            "parameterBpr": 1.0,
                            "parameterG": 1.0,
                            "parameterH": 1.0,
                            "parameterH1": 1.0,
                            "parameterH2": 1.0,
                            "parameterL": 1.0,
                            "parameterN": 3,
                            "parameterLx": [1.0, 2.0, 3.0],
                            "parameterLmin": 1.0,
                            "parameterLmax": 1.0,
                            "parameterLs": 1.0,
                            "parameterLpart": 1.0,
                            "parameterLpart": 1.0,
                            "parameterLp": 1.0,
                            "parameterLpr": 1.0,
                            "parameterLpo": 1.0,
                            "parameterLdk": 1.0,
                            "parameterN0": 1.0,
                            "trackQuality": 2,
                            "trackPlacing": 1,
                            "tracksOnBridge": 2,
                            "bridgeMaterial": 3,
                            "trackConnection": false
                        }
                    },
                    "plainFieldGroup": {
                        "trackQuality": 2,
                        "trackPlacing": 1,
                        "trackConnection": false,
                        "tracksOnBridge": 2,
                        "mainCrossbeamDistance": 10.2
                        "plainFields": [
                            {
                                "initialSpread": 1.0,
                                "terminalSpread": 10.0,
                                "increase": 0.2
                            },
                            {
                                "initialSpread": 10.0,
                                "terminalSpread": 20.0,
                                "increase": 0.5
                            }
                        ],
                        "beamFields": [
                            {
                                "initialSpread": 1.0,
                                "terminalSpread": 4.0,
                                "increase": 0.2
                            },
                            {
                                "initialSpread": 4.0,
                                "terminalSpread": 6.0,
                                "increase": 0.2
                            }
                        ],
                    }
                }
            }

+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00
        
+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### DELETE
Deletes the track completely.

+ Request (application/json)
    + Header
    
            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503



## /tracks/{trackId}/attachments

+ Parameters:

    + trackId (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77/attachments`) ... Number `trackId`  unique identification of track.


### GET
Gets the collection of trcks attachments.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachments (array[TrackAttachment])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body
    
            {
                "attachments": [
                    {
                        "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 1
                        },
                        "edited": null,
                        "editor": null,
                        "fileName": "pekny_obrazek.png"
                        "fileType": "image/png",
                        "note": "moc pekny obrazek"
                    },
                    {
                        "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                        "created": "2015-09-09T21:58:31+02:00",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role": 2
                        },
                        "edited": "2015-09-09T21:58:31+02:00",
                        "fileName": "specifikace.pdf"
                        "fileType": "document/pdf",
                        "note": "Specifikace lokomotivy",
                        "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                        }
                    }
              ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Creates a track attachment.

+ Request (multipart/form-data)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body
    
            {
                "note": "moc pekny obrazek"
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /track/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/{trackId}/attachments/{id}

+ Parameters:

    + trackId (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `trackId`  unique identification of track.
    + id (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of track.


### GET
Gets the track attachment info.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + attachment (TrackAttachment)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "attachment": {
                     "id": "92834734-42c9-11e6-beb8-9e71128cae77",
                     "created": "2015-09-09T21:58:31+02:00",                     
                     "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "username": "lala",
                            "name": "Jana Mala",
                            "role": 2
                        },
                     "edited": "2015-09-09T21:58:31+02:00",
                     "fileName": "specifikace.pdf"
                     "fileType": "document/pdf",
                     "note": "Specifikace lokomotivy",
                     "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "username": "stanek",
                            "name": "Jan Novák",
                            "role": 1
                        }
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### PUT
Updates the track attachment.

+ Request (multipart/form-data)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "note": "moc pekny obrazek"
            }

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Delete the track attachment.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/{trackId}/attachments/{id}/file

+ Parameters:

    + trackId (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `trackId`  unique identification track.
    + id (required, number, `/tracks/12834734-42c9-11e6-beb8-9e71128cae77/attachments/92834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification attachment of track.

### GET
Gets the track attchment file stream.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (content-type of file)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Content-Disposition: "attachment; filename=\"<jemno prilohy>\""

    + Body

            `File content as stream`

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/types

### GET
Gets the track types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Skupina prostých polí"
                    },
                    {
                        "id": 2,
                        "name": "Prvek NK"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/loadClassTypes

### GET
Gets th track load classes collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackLoadClassType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "A"
                    },
                    {
                        "id": 2,
                        "name": "B1"
                    },
                    {
                        "id": 3,
                        "name": "B2"
                    },
                    {
                        "id": 4,
                        "name": "C1"
                    },
                    {
                        "id": 5,
                        "name": "C2"
                    },
                    {
                        "id": 6,
                        "name": "C3"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/crossbeamTypes

### GET
Gets the track crossbeam types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackCrossbeamType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "M - ohybový moment (prostý nosník)"
                    },
                    {
                        "id": 2,
                        "name": "V - posouvající síla (prostý nosník)"
                    },
                    {
                        "id": 3,
                        "name": "R - reakce (řetězec prostých polí)"
                    },
                    {
                        "id": 4,
                        "name": "CS - Speciální příčinková čára"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/qualityTypes

### GET
Gets the track quality types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackQualityType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Stadardní kvalita jízní dráhy"
                    },
                    {
                        "id": 2,
                        "name": "Výjimečná kvalita jízní dráhy"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/placingTypes

### GET
Gets the track quality types collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackPlacingType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Průběžné kolejové lože"
                    },
                    {
                        "id": 2,
                        "name": "Jiný"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/tracksOnBridgeTypes

### GET
Gets the track count type on bridge

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TracksOnBridgeType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Jednokolejný most"
                    },
                    {
                        "id": 2,
                        "name": "Dvou a více kolejný most"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/bridgeMaterialTypes

### GET
Gets the bridge material structure type

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[BridgeStructureType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Betonový nebo masivní"
                    },
                    {
                        "id": 2,
                        "name": "Klenbové s přesypávkou"
                    },
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/mainBeamTypes

### GET
Gets the main beams types

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[MainBeamType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Spojitý nosník / deska"
                    },
                    {
                        "id": 2,
                        "name": "Prostý nosník / deska"
                    },
                    {
                        "id": 3,
                        "name": "Rámy o jednom poli"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/bridgeboardTypes

### GET
Gets the bridge borad material type

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[BridgeboardType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "types": [
                    {
                        "id": 1,
                        "name": "Ocelová ortotropní mostovka",
                        "subtypes": [
                            {
                                "id": 1,
                                "name": "Plech mostovky, puklovka (pro příčný i podélný směr)"
                            },
                            {
                                "id": 2,
                                "name": "Spojité podélné výztuhy (podélníky)"
                            },
                            {
                                "id": 3,
                                "name": "Konzoly podélných výztuh, podélníků a< 0.5 m"
                            }
                        ]
                    },
                    {
                        "id": 2,
                        "name": "Ocelová příčníková mostovka",
                        "subtypes": [
                            {
                                "id": 5,
                                "name": "Příčné výztuhy (příčníky) - koncové"
                            },
                            {
                                "id": 6,
                                "name": "Příčné výztuhy (příčníky) - mezilehlé"
                            }
                        ]
                    },
                    {
                        "id": 3,
                        "name": "Betonová horní mostovka",
                        "subtypes": []
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/sections

### GET
Gets the track sections collection.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackSectionType])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "sections": [
                    {
                        "id": 1,
                        "name": "0100",
                        "historical": false
                    },
                    {
                        "id": 2,
                        "name": "0600",
                        "historical": false
                    },
                    {
                        "id": 3,
                        "name": "0220",
                        "historical": true
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /tracks/sections/{id}/bridges

+ Parameters:

    + id (required, number, `/tracks/sections/2`) ... Number `id`  unique identification track section.

### GET
Gets the bridges collection on specific track section.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + types (array[TrackSectionBridge])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            
    + Body

            {
                "bridges": [
                    {
                        "id": 1,
                        "section": "0100",
                        "name": "Zelný most",
                        "placement": 10.6,
                        "historical": false
                    },
                    {
                        "id": 2,
                        "section": "0100",
                        "name": "Certuv most",
                        "placement": 22.6,
                        "historical": true,
                    },
                    {
                        "id": 3,
                        "section": "0100",
                        "name": "Velka dobra",
                        "placement": 44.6,
                        "historical": false
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503




# Group Route
The route resources can be used for managing routes.


## /routes

### GET
Gets the collection of routes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + routes (array[RouteListItem])

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "routes": [
                    {
                        "id": "3dc0d33d-fa5c-4e0e-830b-6fb76a41b8ef",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2017-04-26T07:58:46.008033+02:00",
                        "editor": "Test User",
                        "databaseType": 2,
                        "name": "Cargo",
                        "startStation": "Pardubice",
                        "endStation": "Ústí n. Labem",
                        "note": null
                    },
                    {
                        "id": "1e5178ee-0982-490c-9273-f1cdbaf98273",
                        "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jana Mala",
                            "username": "lala",
                            "role":2
                        },
                        "edited": "2017-04-25T13:19:39.299362+02:00",
                        "databaseType": 2,
                        "name": "Transformátor",
                        "startStation": "Brno",
                        "endStation": "Kolín",
                        "note": "Strojírna Brno"
                    }
                ]
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### POST
Create a Route
<!-- TODO: separatni endpoint na pop-up s useky? -->

+ Request (application/json)

    + Attributes(RouteCreate)

    + Header

            X-Api-Key: <your-private-token-key>

    + Body

            {
                "name": "Transformátor",
                "note": "Strojírna Brno",
                "startStation": "Brno",
                "throughStation": null,
                "endStation": "Kolín",
                "databaseType": 2,
                "tracks": [
                    {
                        "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                        "backward": true
                    },
                    {
                        "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                        "backward": false
                    },
                    {
                        "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                        "backward": false
                    },
                    {
                        "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                        "backward": true
                    }
                ]
            }

+ Response 201 (application/json)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00
            Location: /routes/12834734-42c9-11e6-beb8-9e71128cae77

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


## /routes/{id}

+ Parameters:

    + id (required, number, `/routes/12834734-42c9-11e6-beb8-9e71128cae77`) ... Number `id`  unique identification of route.

### GET
Gets the route attributes.

+ Request (application/json)

    + Header

            X-Api-Key: <your-private-token-key>

+ Response 200 (application/json)

    + Attributes (object)

        + route (Route)

    + Header

            X-Time: 2014-09-11T17:02:27.761+02:00

    + Body

            {
                "route": {
                    "id": "12834734-42c9-11e6-beb8-9e71128cae77",
                    "created": "2015-09-09T21:58:31+02:00",
                    "creator": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "edited": "2015-09-09T21:58:31+02:00",
                    "editor": {
                            "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                            "name": "Jan Novák",
                            "username": "stanek",
                            "role": 1
                    },
                    "name": "Transformátor",
                    "note": "Strojírna Brno",
                    "startStation": "Brno",
                    "throughStation": null,
                    "endStation": "Kolín",
                    "databaseType": 2,
                    "tracks": [
                        {
                            "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "backward": true,
                            "track": {
                                "id": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                                "creator": {
                                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                                    "name": "Jana Mala",
                                    "username": "lala",
                                    "role":2
                                },
                                "edited": "2015-09-09T21:58:31+02:00",
                                "editor": "pepa",
                                "trackType": 1,
                                "trackSectionCode": 12,
                                "trackSectionPlacement": 2.75,
                                "name": "Výtoň",
                                "note": "mostovka",
                                "trackLoadClass": 9,
                                "loadCapacity": 0.75,
                                "databaseType": 1
                            }
                        },
                        {
                            "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "backward": false,
                            "track": {
                                "id": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                                 "creator": {
                                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                                    "name": "Jana Mala",
                                    "username": "lala",
                                    "role":2
                                },
                                "edited": "2015-09-09T21:58:31+02:00",
                                "editor": "pepa",
                                "trackType": 1,
                                "trackSectionCode": 12,
                                "trackSectionPlacement": 2.75,
                                "name": "Výtoň",
                                "note": "mostovka",
                                "trackLoadClass": 9,
                                "loadCapacity": 0.75,
                                "databaseType": 1
                            }
                        },
                        {
                            "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "backward": false,
                            "track": {
                                "id": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                                 "creator": {
                                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                                    "name": "Jana Mala",
                                    "username": "lala",
                                    "role":2
                                },
                                "edited": "2015-09-09T21:58:31+02:00",
                                "editor": "pepa",
                                "trackType": 1,
                                "trackSectionCode": 12,
                                "trackSectionPlacement": 2.75,
                                "name": "Výtoň",
                                "note": "mostovka",
                                "trackLoadClass": 9,
                                "loadCapacity": 0.75,
                                "databaseType": 1
                            }
                        },
                        {
                            "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "backward": true,
                            "track": {
                                "id": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                                 "creator": {
                                    "id": "125f9669-af7a-4eeb-b7e5-7f1d7286e195",
                                    "name": "Jana Mala",
                                    "username": "lala",
                                    "role":2
                                },
                                "edited": "2015-09-09T21:58:31+02:00",
                                "editor": "pepa",
                                "trackType": 1,
                                "trackSectionCode": 12,
                                "trackSectionPlacement": 2.75,
                                "name": "Výtoň",
                                "note": "mostovka",
                                "trackLoadClass": 9,
                                "loadCapacity": 0.75,
                                "databaseType": 1
                            }
                        }
                    ]
                }
            }

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503

### PUT
Updates the route attributes.

+ Request (application/json)

    + Attributes (object)

        + route (RouteCreate)

    + Header
    
            X-Api-Key: <your-private-token-key>
            
    + Body

            {
                "route": {
                    "name": "Transformátor",
                    "note": "Strojírna Brno",
                    "startStation": "Brno",
                    "throughStation": null,
                    "endStation": "Kolín",
                    "databaseType": 2,
                    "tracks": [
                        {
                            "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "backward": true
                        },
                        {
                            "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "backward": false
                        },
                        {
                            "trackId": "b1951f6f-6c65-4d0f-a2ec-64e9b35b60be",
                            "backward": false
                        },
                        {
                            "trackId": "9a871e1e-11f0-4960-add6-e2f9eaa4c03d",
                            "backward": true
                        }
                    ]
                }
            }

+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


### DELETE
Deletes the route completely.

+ Request (application/json)
    + Header
    
            X-Api-Key: <your-private-token-key>
            
+ Response 200

    + Header
    
            X-Time: 2014-09-11T17:02:27.761+02:00

+ Response 401
+ Response 403
+ Response 404
+ Response 405
+ Response 406
+ Response 500
+ Response 503


# Group Errors

## /{error}

### GET
Global error response structure

+ Response 404 (application/json)

    + Attributes (object)

        + error (Error)
